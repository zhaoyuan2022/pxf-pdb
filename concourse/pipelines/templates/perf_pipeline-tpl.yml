dataproc_destroy_anchor: &ccp_destroy
  do:
  - in_parallel:
    - put: terraform_gpdb
      resource: terraform
      params:
        action: destroy
        env_name_file: terraform_gpdb/name
        terraform_source: ccp_src/google/
      get_params:
        action: destroy
    - put: terraform_dataproc
      resource: terraform
      params:
        action: destroy
        env_name_file: terraform_dataproc/name
        terraform_source: ccp_src/google-dataproc/
        vars:
          project: ((ud/pxf/common/google-project-id))
      get_params:
        action: destroy

set_failed_gpdb_anchor: &set_failed
  do:
  - in_parallel:
    - task: on_failure_set_failed_gpdb
      input_mapping:
        terraform: terraform_gpdb
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/ccp
            tag: latest
        inputs:
        - name: ccp_src
        - name: terraform_gpdb
        run:
          path: 'ccp_src/((tf-cloud-provider))/ccp_failed_test.sh'
        params:
          GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
          GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
          GOOGLE_ZONE: ((ud/pxf/common/google-zone))
          GOOGLE_SERVICE_ACCOUNT: ((ud/pxf/common/google-service-account))
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((ud/pxf/common/tf-machine-region))
          BUCKET_PATH: ((tf-bucket-path))
          BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))

    - task: on_failure_set_failed_dataproc
      input_mapping:
        terraform: terraform_dataproc
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/ccp
            tag: latest
        inputs:
        - name: ccp_src
        - name: terraform_dataproc
        run:
          path: 'ccp_src/((tf-cloud-provider))/ccp_failed_test.sh'
        params:
          GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
          GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
          GOOGLE_ZONE: ((ud/pxf/common/google-zone))
          GOOGLE_SERVICE_ACCOUNT: ((ud/pxf/common/google-service-account))
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((ud/pxf/common/tf-machine-region))
          BUCKET_PATH: ((tf-bucket-path))
          BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))

resource_types:
- name: terraform
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-ud/terraform-resource
    tag: 0.11.15
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))

- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: ccp_src
  type: git
  icon: git
  source:
    branch: ((ud/pxf/common/gp-concourse-cluster-provisioner-git-branch))
    private_key: ((gp-concourse-cluster-provisioner-git-key))
    uri: ((ud/pxf/common/gp-concourse-cluster-provisioner-git-remote))

- name: pxf_src
  type: git
  icon: git
  source:
    branch: ((pxf-git-branch))
    uri: ((ud/pxf/common/git-remote))

- name: gpdb6_rhel[[redhat_major_version]]
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/pivnet-artifacts-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    regexp: latest-0_gpdb6/greenplum-db-(.*)-rhel[[redhat_major_version]]-x86_64.rpm

{% if redhat_major_version == 7 %}
- name: gpdb6-pxf-dev-rhel7-image
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-ud/gpdb-pxf-dev/gpdb6-centos7-test-pxf
    tag: latest
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))
{%  elif redhat_major_version == 8 %}
- name: gpdb6-pxf-dev-rhel8-image
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-ud/gpdb-pxf-dev/gpdb6-rhel8-test-pxf
    tag: latest
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))
{% endif %}

- name: ccp-7
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-public-images/ccp
    tag: latest

- name: pxf_tarball
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: perf/snapshots/pxf6/pxf-gp6.el[[redhat_major_version]].tar.gz

- name: singlecluster
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-resources-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: singlecluster/HDP2/singlecluster-HDP2.tar.gz

- name: terraform
  type: terraform
  icon: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
    vars:
      project_id: ((ud/pxf/common/google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((ud/common/aws-region))
      bucket: ((ud/pxf/common/tf-bucket-name))
      bucket_path: ((tf-bucket-path))

- name: pxf-build-dependencies
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-resources-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: build-dependencies/pxf-build-dependencies.tar.gz

- name: timed-trigger
  type: time
  icon: timer
  source:
    interval: ((perf-trigger-interval))
    location: America/Los_Angeles
    start: ((perf-trigger-start))
    stop: ((perf-trigger-stop))

jobs:

- name: Build PXF-GP6 on RHEL[[redhat_major_version]]
  plan:
  - get: timed-trigger
    trigger: true
  - in_parallel:
    - get: pxf_src
    - get: gpdb6-pxf-dev-rhel[[redhat_major_version]]-image
    - get: gpdb_package
      resource: gpdb6_rhel[[redhat_major_version]]
    - get: pxf-build-dependencies
  - task: Build PXF-GP6 on RHEL[[redhat_major_version]]
    image: gpdb6-pxf-dev-rhel[[redhat_major_version]]-image
    file: pxf_src/concourse/tasks/build.yml
    params:
      LICENSE: ((ud/pxf/common/rpm-license))
      VENDOR: ((ud/pxf/common/rpm-vendor))
  - put: pxf_tarball
    params:
      file: dist/pxf-gp6-*.el[[redhat_major_version]].tar.gz

- name: PXF Performance ((perf-scale))G
  ensure:
    <<: *set_failed
  on_success:
    <<: *ccp_destroy
  plan:
  - in_parallel:
    - get: ccp_src
    - get: gpdb_package
      resource: gpdb6_rhel[[redhat_major_version]]
    - get: pxf_src
      passed: [Build PXF-GP6 on RHEL[[redhat_major_version]]]
      trigger: true
    - get: pxf_tarball
      passed: [Build PXF-GP6 on RHEL[[redhat_major_version]]]
      trigger: true
    - get: ccp-7
    - get: gpdb6-pxf-dev-rhel[[redhat_major_version]]-image
    - get: singlecluster

  - in_parallel:
    - put: terraform_gpdb
      resource: terraform
      params:
        action: create
        delete_on_failure: true
        generate_random_name: true
        terraform_source: ccp_src/google/
        vars:
{% if redhat_major_version == 7 %}
          PLATFORM: centos7
{% elif redhat_major_version == 8 %}
          PLATFORM: rhel8
{% endif %}
          number_of_nodes: ((perf-gpdb-number-of-nodes))
          segments_per_host: ((perf-gpdb-segments-per-host))
          instance_type: ((perf-gpdb-instance-type))
          ccp_reap_minutes: ((perf-ccp-reap-minutes))
          disk_size: ((perf-gpdb-disk-size))
          mirrors: false

    - put: terraform_dataproc
      resource: terraform
      params:
        action: create
        delete_on_failure: true
        generate_random_name: true
        terraform_source: ccp_src/google-dataproc/
        vars:
{% if redhat_major_version == 7 %}
          PLATFORM: centos7
{% elif redhat_major_version == 8 %}
          PLATFORM: rhel8
{% endif %}
          number_of_nodes: ((perf-hadoop-number-of-nodes))
          instance_type: ((perf-hadoop-instance-type))
          project: ((ud/pxf/common/google-project-id))
          internal_ip_only: "false"
          ccp_reap_minutes: ((perf-ccp-reap-minutes))
          initialization_script: ((perf-hadoop-initialization-script))
          initialization_script_timeout: ((perf-hadoop-initialization-script-timeout))
          disk_size: ((perf-hadoop-disk-size))

  - in_parallel:
      - do:
        - task: Generate Greenplum Cluster
          input_mapping:
            gpdb_rpm: gpdb_package
            terraform: terraform_gpdb
          file: ccp_src/ci/tasks/gen_cluster.yml
          image: ccp-7
          params:
            AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
            AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
            AWS_DEFAULT_REGION: ((ud/common/aws-region))
            BUCKET_PATH: ((tf-bucket-path))
            BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
{% if redhat_major_version == 7 %}
            PLATFORM: centos7
{% elif redhat_major_version == 8 %}
            PLATFORM: rhel8
{% endif %}
            CLOUD_PROVIDER: google
            GPDB_RPM: true
        - task: Initialize Greenplum
          file: ccp_src/ci/tasks/gpinitsystem.yml
          on_failure:
            <<: *ccp_destroy
        - task: Setup PXF
          input_mapping:
            terraform: terraform_gpdb
            bin_gpdb: gpdb_binary
          file: pxf_src/concourse/tasks/install_pxf.yml
          image: ccp-7
          params:
            AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
            AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
            AWS_DEFAULT_REGION: ((ud/common/aws-region))
            BUCKET_PATH: ((tf-bucket-path))
            BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
            GP_VER: 6
            CLOUD_PROVIDER: google
            IMPERSONATION: ((enable-impersonation-multinode))
            INSTALL_GPHDFS: ((perf-benchmark-gphdfs))
            PROXY_USER: gpadmin
            PXF_JVM_OPTS: ((pxf-jvm-opts))
          on_failure:
            <<: *ccp_destroy

      - task: Load Data
        config:
          platform: linux
          inputs:
          - name: pxf_src
          - name: terraform_dataproc
          run:
            path: pxf_src/concourse/scripts/load_data.bash
          params:
            GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
            GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
            GOOGLE_ZONE: ((ud/pxf/common/google-zone))
            GOOGLE_SERVICE_ACCOUNT: ((ud/pxf/common/google-zone))
            CLOUD_PROVIDER: google
            SCALE: ((perf-scale))
        image: ccp-7

  - task: run-perf-multinode
    image: gpdb6-pxf-dev-rhel[[redhat_major_version]]-image
    file: pxf_src/concourse/tasks/pxf-perf-multi-node.yml
    params:
      SCALE: ((perf-scale))
      BENCHMARK_ADL: ((perf-benchmark-adl))
      BENCHMARK_HADOOP: ((perf-benchmark-hadoop))
      BENCHMARK_S3: ((perf-benchmark-s3))
      BENCHMARK_S3_EXTENSION: ((perf-benchmark-s3-extension))
      BENCHMARK_GCS: ((perf-benchmark-gcs))
      BENCHMARK_GPHDFS: ((perf-benchmark-gphdfs))
      BENCHMARK_WASB: ((perf-benchmark-wasb))
      BENCHMARK_CONCURRENCY: ((perf-benchmark-concurrency))
      ADL_ACCOUNT: ((ud/pxf/common/adl-account))
      ADL_CLIENT_ID: ((ud/pxf/secrets/adl-client-id))
      ADL_CREDENTIAL: ((ud/pxf/secrets/adl-credential))
      ADL_REFRESH_URL: ((ud/pxf/common/adl-refresh-url))
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      AWS_DEFAULT_REGION: ((ud/common/aws-region))
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/gsc-ci-service-account-key))
      WASB_ACCOUNT_NAME: ((ud/pxf/common/wasb-account-name))
      WASB_ACCOUNT_KEY: ((ud/pxf/secrets/wasb-account-key))
      SLEEP_BEFORE_DESTROY_IN_SEC: ((perf-sleep-before-destroy))
      GP_VER: 6
